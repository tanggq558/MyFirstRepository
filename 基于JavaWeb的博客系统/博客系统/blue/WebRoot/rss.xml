<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/" version="2.0">
  <channel>
    <title>吴宾个人博客-十月伤感</title>
    <link>http://hi.baidu.com/wubin7019088</link>
    <description>十月伤感</description>
    <language>zh-cn</language>
    <copyright>十月伤感</copyright>
    <pubDate>Thu, 29 Dec 2011 07:28:51 GMT</pubDate>
    <dc:date>2011-12-29T07:28:51Z</dc:date>
    <dc:language>zh-cn</dc:language>
    <dc:rights>十月伤感</dc:rights>
    <item>
      <title>戒指的戴法</title>
      <link>ArticleDetail.action?id=20</link>
      <description>右手小指：不谈恋爱。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
右手无名指：热恋中。&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
右手中指：名花有主。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
右手食指：单身贵族 。　　&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
左手小指：不婚族。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
左手无名指： 结婚。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
左手中指： 订婚。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
左手食指： 未婚 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
大拇指都是代表权势的意思， 也可以做自信的意思。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
追求订婚离 按照我国的习惯， 订婚戒一般戴在左手的中指， 结婚戒指戴在左手的无名指； &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
未婚姑娘应戴在右手的中指或无名指 国际上比较流行的戴法是： 戴在拇指&amp;mdash;&amp;mdash;自我、率性；正在寻觅对象 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戴在食指&amp;mdash;&amp;mdash;已有情人；想结婚而尚未结婚。&lt;br /&gt;&#xD;
&amp;nbsp;&lt;br /&gt;&#xD;
戴在中指&amp;mdash;&amp;mdash;处于热恋之中，订婚 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戴在小指&amp;mdash;&amp;mdash;表示单身或离婚或决心独身 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
无名指上&amp;mdash;&amp;mdash;已订婚或结婚 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
右手无名指&amp;mdash;&amp;mdash;表示具有修女的心性。 戴设计性比较强的戒指时，可以和表搭配 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
对女士来说&amp;mdash;&amp;mdash; ．&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 喜爱粉红者，感情丰富而浪漫。&amp;nbsp;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 喜爱红者，热情似火。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 喜爱蓝者．较内向冷淡。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 喜爱绿者，情感纤弱。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
对男士来说&amp;mdash;&amp;mdash; ．戴纯银戒指表示性情温和，易迁就他人，容易沟通。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 戴金戒指者较重视利益，往往会有精明的生意头脑。&amp;nbsp;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 戴翡翠玉石者有实力，注重品味素质，处事严谨。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 不喜欢戒指有纹饰者，是个坚信爱情的人。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戒指戴在不同的手指上，能体现与性格有关的心理含义。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
喜戴在食指者，性格较偏激倔强。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
喜戴在右中指者，心理平衡，态度客观；崇尚中庸的人生观念。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
喜戴在左中指者，有责任感，重视家庭。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
喜戴在小手指者，有自卑感。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
喜戴在无名指者，无野心，随和，较不计较得失。&lt;br /&gt;&#xD;
&amp;nbsp;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戴戒指应该注意： 戴在食指上的戒指，要求有立体感的造型。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戴在中指上的戒指，要求大气、有重量感，能够给人以较正式、积极的感觉。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
戴在无名指的戒指，适合正统造型 戴在小指上的戒指，适合可爱、秀气的造型，因为小手指给人以女性化的感觉。 手指修长，适宜宽戒和有体积感的戒指 肥胖型的手适合戴螺旋造型的戒指，这样能使手指稍显纤细。 短粗型的手可选择流线造型的戒指。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
指上心愿：&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
小指：小指传达的是一种媚惑性感的讯息，戒指戴在其上将会有意想不到的事发生； &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
无名指：相传无名指与心脏相连，最适合发表神圣的誓言； &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
中指：戒指戴在中指上最能营造自由爽朗的气氛，能让人灵感涌现，变得更有魅力、有异性缘； &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
食指：而把戒指戴在食指上个性会变得开朗而独立； &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
拇指：戒指戴在拇指可助你达成心愿。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
指甲戒，则是戴在手指尖上的，专门修饰你的指甲和指尖。 为什么结婚戒指要戴在无名指上&amp;mdash;&amp;mdash;奇妙的生理现象 将两手中指向下弯曲，背跟背对靠在一起，其它4指指尖对碰。 &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
下面开始游戏的正题： &lt;br /&gt;&#xD;
1.请张开你们那对大母指，大母指代表我们的父母 &lt;br /&gt;&#xD;
2.请大家合上大母指，再张开食指，食指代表兄弟姐妹 &lt;br /&gt;&#xD;
3.请大家合上食指，再张开小母指，小母指代表子女 &lt;br /&gt;&#xD;
4.那么，请大家合上小母指，再试着张开无名指，无名指怎么也张不开&amp;mdash;&amp;mdash;夫妻</description>
      <category>我的文章</category>
      <pubDate>Tue, 29 Nov 2011 06:45:08 GMT</pubDate>
      <guid>ArticleDetail.action?id=20</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-11-29T06:45:08Z</dc:date>
    </item>
    <item>
      <title>学会</title>
      <link>ArticleDetail.action?id=19</link>
      <description>&lt;p&gt;再烦，也别忘微笑；再急，也要注意语气；&lt;/p&gt;&#xD;
&lt;p&gt;再苦，也别忘坚持；再累，也要爱自己。&lt;/p&gt;&#xD;
&lt;p&gt;低调做人，你会一次比一次 稳健；高调做事，你会一次比一次优秀。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;成功的时候不要忘记过去；失败的时候不要忘记还有未来。&lt;/p&gt;&#xD;
&lt;p&gt;有望得到的要努力，无望得到的不介意，则无论输赢姿态都会好看。&lt;/p&gt;&#xD;
&lt;p&gt;生活不是单行线，一条路走不通，你可以转弯。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;泪水和汗水的化学成分相似，但前者只能为你换来同情，后者却可以为你赢的成功。&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;变老是人生的必修课，变成熟是选修课。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;以锻炼为本，学会健康；以修进为本，学会求知； &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;以进德为本，学会做人；以适应为本，学会生存。&lt;/p&gt;&#xD;
&lt;p&gt;人生四项基本原则：懂得选择，学会放弃，耐得住寂寞，经得起诱惑。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;当所有人都低调的时候，你可以高调，但不能跑调。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;学会忘记是生活的技术，学会微笑是生活的艺术。&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;什么是好工作：一不影响生活作息，二不影响家庭团聚，三能养家糊口。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;懒惰像生锈一样，比操劳更消耗身体。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;让梦想成真的最好办法就是醒来。&lt;/p&gt;&#xD;
&lt;p&gt;哲人无忧，智者常乐。并不是因为所爱的一切他都拥有了，而是所拥有的一切他都爱。 &amp;shy;&lt;/p&gt;&#xD;
&lt;p&gt;人生有几件绝对不能失去的东西:自制的力量，冷静的头脑，希望和信心。 &amp;shy;&lt;br /&gt;&#xD;
&amp;nbsp;&lt;/p&gt;</description>
      <category>我的文章</category>
      <pubDate>Tue, 29 Nov 2011 06:36:36 GMT</pubDate>
      <guid>ArticleDetail.action?id=19</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-11-29T06:36:36Z</dc:date>
    </item>
    <item>
      <title>要我上讲台了</title>
      <link>ArticleDetail.action?id=18</link>
      <description>今天我的带课老师问我什么时候能上讲台&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
这个话题终于抬上桌面了，呵呵，也没有什么，好在要我讲的东西好讲&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
就是word2003呵呵，简单吧，不过烦的是就是要自己做PPT了&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
好在我电脑里面素材多，我做网页设计的嘛，这点东东还是有的，哈哈&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
再麻烦的就是要打字了哦，唉，照书上敲，辛苦啊</description>
      <category>我的文章</category>
      <pubDate>Thu, 20 Oct 2011 10:33:44 GMT</pubDate>
      <guid>ArticleDetail.action?id=18</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-10-20T10:33:44Z</dc:date>
    </item>
    <item>
      <title>放假完了，都没有什么感觉</title>
      <link>ArticleDetail.action?id=17</link>
      <description>放假一个星期了，玩得还行吧&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
整天陪着女朋友，好开心的&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
陪她过国庆还有中秋，俺们都冒回去，在学校的日子也不错&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
不知道怎么搞的，和她在一起的时间总是过的这快啊&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
明天就要去上课了，好不爽啊！&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
今天是最后一天了，好好玩会算了，明天去面对现实去哦。。。</description>
      <category>我的文章</category>
      <pubDate>Sat, 08 Oct 2011 09:24:27 GMT</pubDate>
      <guid>ArticleDetail.action?id=17</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-10-08T09:24:27Z</dc:date>
    </item>
    <item>
      <title>当教师了</title>
      <link>ArticleDetail.action?id=16</link>
      <description>今天去学校领了自己的任务，呵呵&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
我这个学校是个中专学校，任务很少&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
我带一个计算机班&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
一个星期只用去两次，一次两节课，呵呵，好少&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
其他的同学有的是每天就要去，有的是一个星期去四次的三次&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
反正我这个老师当的轻松啊，呵呵&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
前面是去听老师讲，后来才让我们去上课，就是要写听课笔记，有点麻烦&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
其他的都还可以&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
和我一起是一新校园的一个女生，是一个老师带我们，一人一个班&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
今天下午就要去听课了哦，56节，还要早起呢</description>
      <category>我的文章</category>
      <pubDate>Thu, 22 Sep 2011 02:53:35 GMT</pubDate>
      <guid>ArticleDetail.action?id=16</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-09-22T02:53:35Z</dc:date>
    </item>
    <item>
      <title>要去当老师了！</title>
      <link>ArticleDetail.action?id=15</link>
      <description>明天就要去实习了&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
唉&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
这些天老是没有事做&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
现在好了，事来了，呵呵，当老师了&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
去体验下也好，总比整天在学校玩好啊！&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
希望指导老师不要给安排好多课，不然那应付过来啊！&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
还有，学生不要调皮哦。。。&lt;img alt="" src="http://www.dukai168.cn/fckeditor/editor/images/smiley/msn/1.gif" /&gt;</description>
      <category>我的文章</category>
      <pubDate>Tue, 20 Sep 2011 07:33:54 GMT</pubDate>
      <guid>ArticleDetail.action?id=15</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-09-20T07:33:54Z</dc:date>
    </item>
    <item>
      <title>一上QQ,cup过一会就100%?</title>
      <link>ArticleDetail.action?id=14</link>
      <description>也不知道是怎么搞的，我上我自己的QQ就很好，也不出现100%的现象&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
但是呢，我一登陆我女朋友的QQ就不行了，一分钟不到就会CUP100%&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
你说这个郁闷啊！搞得我只能用WEB版的QQ&amp;nbsp;了&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
我分析了下，如果是电脑中毒了，那我的QQ也应该不能登陆才对啊，但是出巧的是，我的可以&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
后来我怀疑啊，可能是有谁在故意攻击我女朋友的QQ，很有可能！&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
后来我又试了好几个QQ，也没有出现这样的情况啊，所以肯定是那个JR在搞破坏！&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
不知道大家有没有遇到这样的问题啊？？</description>
      <category>我的文章</category>
      <pubDate>Wed, 07 Sep 2011 02:25:57 GMT</pubDate>
      <guid>ArticleDetail.action?id=14</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-09-07T02:25:57Z</dc:date>
    </item>
    <item>
      <title>图书管理系统(C版)</title>
      <link>ArticleDetail.action?id=13</link>
      <description>/*************************&lt;br /&gt;&#xD;
* 运行环境:vc++6.0&lt;br /&gt;&#xD;
*************************/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
#include &amp;lt;stdio.h&amp;gt; /*头文件名*/&lt;br /&gt;&#xD;
#include &amp;lt;string.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;stdlib.h&amp;gt;&lt;br /&gt;&#xD;
#define Max 3 /*定义最大借书权限(可更改)*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
typedef struct book /*图书类型*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
char book_num[10]; &lt;br /&gt;&#xD;
char book_name[20];&lt;br /&gt;&#xD;
int book_kc;&lt;br /&gt;&#xD;
int book_xc;&lt;br /&gt;&#xD;
struct book *next;&lt;br /&gt;&#xD;
}BK;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
typedef struct borrow /*借书数目类型*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
char borrow_book_num[10];&lt;br /&gt;&#xD;
}BO;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
typedef struct reader /*读者类型*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
char reader_num[10];&lt;br /&gt;&#xD;
char reader_name[10];&lt;br /&gt;&#xD;
int right;&lt;br /&gt;&#xD;
BO borrow[Max]; /*嵌套借书数目类型*/&lt;br /&gt;&#xD;
struct reader * next;&lt;br /&gt;&#xD;
}RD;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
BK *h_book; /*图书指针*/&lt;br /&gt;&#xD;
RD *h_reader; /*读者指针*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Menu(); /*主菜单*/&lt;br /&gt;&#xD;
void Menu_select(); /*主菜单选择函数*/&lt;br /&gt;&#xD;
void Init(); /*初始化函数*/&lt;br /&gt;&#xD;
void Init_reader(); /*初始化读者*/&lt;br /&gt;&#xD;
void Init_book(); /*初始化图书*/&lt;br /&gt;&#xD;
void Insert_New_Book(); /*增加新书*/&lt;br /&gt;&#xD;
void Insert_New_Reader(); /*增加新读者*/&lt;br /&gt;&#xD;
void del_old_book(); /*删除旧图书*/&lt;br /&gt;&#xD;
void del_old_reader(); /*删除旧读者(就是已经不存在或毕业的同学)*/&lt;br /&gt;&#xD;
void book_not_enough(); /*库存不足信息函数*/&lt;br /&gt;&#xD;
int Find(); /*查找函数*/&lt;br /&gt;&#xD;
void Find_Select(); /*查找选择菜单*/&lt;br /&gt;&#xD;
void Find_Reader(); /*查找读者*/&lt;br /&gt;&#xD;
void Find_Book(); /*查找图书*/ &lt;br /&gt;&#xD;
void Borrow_Book(); /*借书函数*/&lt;br /&gt;&#xD;
void Return_Book(); /*还书函数*/&lt;br /&gt;&#xD;
void about(); /*&amp;quot;关于系统的说明&amp;quot;函数*/&lt;br /&gt;&#xD;
int Print(); /*打印函数*/&lt;br /&gt;&#xD;
void Print_Select(); /*打印选择函数*/&lt;br /&gt;&#xD;
void Print_book(); /*打印图书信息*/&lt;br /&gt;&#xD;
void Print_reader(); /*打印读者信息*/&lt;br /&gt;&#xD;
void Save(); /*保存信息函数*/&lt;br /&gt;&#xD;
void Save_Reader(); /*保存读者信息*/&lt;br /&gt;&#xD;
void Save_Book(); /*保存图书信息*/ &lt;br /&gt;&#xD;
void Load(); /*加载信息函数*/&lt;br /&gt;&#xD;
void Load_Reader(); /*加载读者信息*/&lt;br /&gt;&#xD;
void Load_Book(); /*加载图书信息*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Menu() &lt;br /&gt;&#xD;
{ int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t图书管理系统主菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0----退出系统 6----关于系统 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t1----新书入库 7----旧书出库 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2----增新读者 8----删旧读者 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t3----图书查询 9----输出全部信息\t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t4----借书登记 10----库存不足图书\t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t5----还书管理 11----保存当前信息\t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码:&amp;quot;); /*代码选择模式(下同)*/&lt;br /&gt;&#xD;
for(;;) &lt;br /&gt;&#xD;
{ scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn); &lt;br /&gt;&#xD;
fflush(stdin); &lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;11)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn; &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Menu_select()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(;;) /*循环调用模式,保证能进行重复操作(下同)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Menu())&lt;br /&gt;&#xD;
{ case 0:&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
Save();&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t文件保存成功!\n&amp;quot;); &lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\tGoodBye!\n&amp;quot;); &lt;br /&gt;&#xD;
getch(); &lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
case 1:Insert_New_Book();break; /*功能调用*/&lt;br /&gt;&#xD;
case 2:Insert_New_Reader();break;&lt;br /&gt;&#xD;
case 3:Find_Select();break;&lt;br /&gt;&#xD;
case 4:Borrow_Book();break;&lt;br /&gt;&#xD;
case 5:Return_Book();break;&lt;br /&gt;&#xD;
case 6:about();break;&lt;br /&gt;&#xD;
case 7:del_old_book();break;&lt;br /&gt;&#xD;
case 8:del_old_reader();break;&lt;br /&gt;&#xD;
case 9:Print_Select();break;&lt;br /&gt;&#xD;
case 10:book_not_enough();break;&lt;br /&gt;&#xD;
case 11:Save(); Load();&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件保存成功!按任意键进行下步操作....&amp;quot;);&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!&amp;quot;);exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Init() /*初始化*/&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
Init_reader();&lt;br /&gt;&#xD;
Init_book();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Init_reader() /*初始化读者信息(从键盘输入一组数据)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p0;&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者初始化开始,请输入读者信息..\n包括编号.姓名..\n&amp;quot;);&lt;br /&gt;&#xD;
p0=(RD *)malloc(sizeof(RD));&lt;br /&gt;&#xD;
h_reader=p0;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入读者的信息:\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderNo.:&amp;quot;); /*输入读者编号(唯一)*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;reader_num);&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderName:&amp;quot;); /*输入读者姓名(不唯一)*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;reader_name);&lt;br /&gt;&#xD;
p0-&amp;gt;right=0;&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
strcpy(p0-&amp;gt;borrow[i].borrow_book_num,&amp;quot;0&amp;quot;); &lt;br /&gt;&#xD;
/*所借图书直接置为0(即没有借书)*/&lt;br /&gt;&#xD;
p0-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者信息初始化完毕!按任意键继续下一步操作..\n&amp;quot;); &lt;br /&gt;&#xD;
/*头接点建立完毕*/&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Init_book() /*初始化图书信息(从键盘输入一组数据)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p0;&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书初始化开始,请输入图书信息..\n包括编号.书名.数量..\n&amp;quot;);&lt;br /&gt;&#xD;
p0=(BK *)malloc(sizeof(BK));&lt;br /&gt;&#xD;
h_book=p0;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入图书信息:\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;BookNo.:&amp;quot;); /*输入图书编号(唯一)*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;book_num);&lt;br /&gt;&#xD;
printf(&amp;quot;BookName:&amp;quot;); /*输入图书名称(不唯一)*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;book_name);&lt;br /&gt;&#xD;
printf(&amp;quot;Number:&amp;quot;); /*输入图书数量*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p0-&amp;gt;book_kc);&lt;br /&gt;&#xD;
p0-&amp;gt;book_xc=p0-&amp;gt;book_kc; /*开始时图书现存量和库存量相等*/&lt;br /&gt;&#xD;
p0-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书信息初始化完毕!按任意键继续下一步操作..\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Insert_New_Reader() /*增加新读者*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p,*p0,*p1,*p2;&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
p=p1=p2=h_reader;&lt;br /&gt;&#xD;
printf(&amp;quot;\n增加新读者模块...\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入新读者信息..\n包括编号.姓名..\n&amp;quot;);&lt;br /&gt;&#xD;
p0=(RD *)malloc(sizeof(RD)); /*开辟结点,存储新的读者信息*/&lt;br /&gt;&#xD;
re_input_reader: /*设置标志符,重新输入时返回到这(下同)*/&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderNo.:&amp;quot;); /*同上*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;reader_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p0-&amp;gt;reader_num,p2-&amp;gt;reader_num)!=0&amp;amp;&amp;amp;p2-&amp;gt;next!=NULL) &lt;br /&gt;&#xD;
/*排查读者编号是否已经存在*/&lt;br /&gt;&#xD;
p2=p2-&amp;gt;next;&lt;br /&gt;&#xD;
if(strcmp(p0-&amp;gt;reader_num,p2-&amp;gt;reader_num)==0) &lt;br /&gt;&#xD;
/*如果存在,则重新输入,直至不重复*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n此编号读者已存在!请重新输入\n&amp;quot;);&lt;br /&gt;&#xD;
goto re_input_reader;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderName:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;reader_name);&lt;br /&gt;&#xD;
p0-&amp;gt;right=0; &lt;br /&gt;&#xD;
/*表示读者最初借书数目为 0 (即一本书都没有借)*/&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
strcpy(p0-&amp;gt;borrow[i].borrow_book_num,&amp;quot;0&amp;quot;); /*同初始化*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;reader_num,p0-&amp;gt;reader_num)!=0&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
p1=p; p=p-&amp;gt;next; /*遍历链表,(p1为标志指针)插入新的结点*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(strcmp(p0-&amp;gt;reader_num,p-&amp;gt;reader_num)&amp;lt;=0) &lt;br /&gt;&#xD;
/*简单的插入操作(不再赘述)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p==h_reader) h_reader=p0;&lt;br /&gt;&#xD;
else p1-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=p;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n新读者增加完毕!按任意键继续下一步操作..\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Insert_New_Book()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p,*p0,*p1,*p2; /*基本原理同上*/&lt;br /&gt;&#xD;
p=p1=p2=h_book;&lt;br /&gt;&#xD;
printf(&amp;quot;\n新书入库模块...\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入新读者信息..\n包括编号.书名.数量..\n&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
p0=(BK *)malloc(sizeof(BK));&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;BookNo.:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;book_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p0-&amp;gt;book_num,p2-&amp;gt;book_num)!=0&amp;amp;&amp;amp;p2-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p2=p2-&amp;gt;next;&lt;br /&gt;&#xD;
if(strcmp(p0-&amp;gt;book_num,p2-&amp;gt;book_num)==0) &lt;br /&gt;&#xD;
/*此出分两种情况,若图书编号存在,则直接进库,只须输入书的数量*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n此编号图书已存在!!直接入库!\n&amp;quot;); &lt;br /&gt;&#xD;
printf(&amp;quot;Number:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p0-&amp;gt;book_kc);&lt;br /&gt;&#xD;
p2-&amp;gt;book_kc+=p0-&amp;gt;book_kc;&lt;br /&gt;&#xD;
p2-&amp;gt;book_xc+=p0-&amp;gt;book_kc;&lt;br /&gt;&#xD;
goto end;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;BookName:&amp;quot;);&lt;br /&gt;&#xD;
/*若不存在,则需要输入其他的信息 ,然后在进行插入操作*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;book_name);&lt;br /&gt;&#xD;
printf(&amp;quot;Number:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p0-&amp;gt;book_kc);&lt;br /&gt;&#xD;
p0-&amp;gt;book_xc=p0-&amp;gt;book_kc; &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;book_num,p0-&amp;gt;book_num)!=0&amp;amp;&amp;amp;p-&amp;gt;next!=NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p1=p; p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(strcmp(p0-&amp;gt;book_num,p-&amp;gt;book_num)&amp;lt;=0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p==h_book) h_book=p0;&lt;br /&gt;&#xD;
else p1-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=p;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
end:&lt;br /&gt;&#xD;
printf(&amp;quot;\n新书入库完毕!按任意键继续下一步操作..\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Find() /*查找菜单*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t打印全部信息菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0----返回上级 1----关于系统 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2----查找图书 3----查找读者 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;) /*同上主菜单*/&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn); &lt;br /&gt;&#xD;
fflush(stdin); &lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;3)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn; &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Find_Select() /*选择菜单*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
for(;;) /*模式同主菜单*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Find()) /*功能选择(同主菜单)*/&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;); Menu_select(); break; &lt;br /&gt;&#xD;
case 1:about();break;&lt;br /&gt;&#xD;
case 2:Find_Book();break;&lt;br /&gt;&#xD;
case 3:Find_Reader();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!&amp;quot;);exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Find_Book() /*查找图书*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p;&lt;br /&gt;&#xD;
char find_book[10]; /*功能很简单,因为读者编号唯一,查找只须一次遍历*/&lt;br /&gt;&#xD;
p=h_book;&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书查询模块\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要查询图书编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,find_book);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;book_num,find_book)!=0&amp;amp;&amp;amp;p-&amp;gt;next)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;book_num,find_book)==0) &lt;br /&gt;&#xD;
/*找到了就打印,否则提示不存在,或出错*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书编号:%s的信息为:\n&amp;quot;,find_book);&lt;br /&gt;&#xD;
printf(&amp;quot;\nBookNo.\t\tBookName\tXianCun \tKuCun\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;%s\t\t%s\t\t%3d\t\t%3d\n&amp;quot;,p-&amp;gt;book_num,p-&amp;gt;book_name,p-&amp;gt;book_xc,p-&amp;gt;book_kc);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n此读者编号不存在,请核对!按任意键返回...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Find_Reader() /*同上(不再赘述)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p;&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
char find_reader[10];&lt;br /&gt;&#xD;
p=h_reader;&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书查询模块\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要查询图书编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,find_reader);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;reader_num,find_reader)!=0&amp;amp;&amp;amp;p-&amp;gt;next)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;reader_num,find_reader)==0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者编号:%s的信息为:\n&amp;quot;,find_reader);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderNo.\tReaderName&amp;quot;); &lt;br /&gt;&#xD;
/*此处这样处理,是为了能实现一个读者能借多本书 Max 可以改*/&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
printf(&amp;quot;\tBorrowBookNum%d&amp;quot;,i+1); &lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;%s\t\t%s&amp;quot;,p-&amp;gt;reader_num,p-&amp;gt;reader_name);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
printf(&amp;quot;\t\t%7s&amp;quot;,p-&amp;gt;borrow[i].borrow_book_num);&lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n此图书编号不存在,请核对!按任意键返回...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Borrow_Book() /*借书模块*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p; RD *q;&lt;br /&gt;&#xD;
char bo_num[10],rea_num[10];&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
p=h_book; q=h_reader;&lt;br /&gt;&#xD;
printf(&amp;quot;\n借书模块...\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入借书的读者编号:&amp;quot;); /*先输入借书的读者信息*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,rea_num);&lt;br /&gt;&#xD;
while(q-&amp;gt;next!=NULL&amp;amp;&amp;amp;strcmp(rea_num,q-&amp;gt;reader_num)!=0) &lt;br /&gt;&#xD;
/*遍历一次读者链表,判断读者是否存在*/&lt;br /&gt;&#xD;
q=q-&amp;gt;next;&lt;br /&gt;&#xD;
if(q-&amp;gt;next==NULL&amp;amp;&amp;amp;strcmp(rea_num,q-&amp;gt;reader_num)!=0) &lt;br /&gt;&#xD;
/*如果存在,则继续,不存在就、则提示错误!*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!此读者编号不存在!按任意键返回..\n&amp;quot;);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要借的书的编号:&amp;quot;); &lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,bo_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(bo_num,p-&amp;gt;book_num)!=0&amp;amp;&amp;amp;p-&amp;gt;next!=NULL) &lt;br /&gt;&#xD;
/*遍历一次图书链表,判断此图书是否存在*/&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;next==NULL&amp;amp;&amp;amp;strcmp(bo_num,p-&amp;gt;book_num)!=0) &lt;br /&gt;&#xD;
/*如果存在,则继续,不存在就、则提示错误!*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!此图书编号不存在!按任意键返回..\n&amp;quot;);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(p-&amp;gt;book_xc&amp;lt;=0) /*判断此图书是否还有库存*/ &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n抱歉,此书已借完!请等待新书的到来!!\n按任意键返回....&amp;quot;);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(q-&amp;gt;right&amp;gt;=Max) /*判断此读者借书权限是否已达最大*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n不好意思,借书数目已满!不能借书!\n按任意键返回....&amp;quot;);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else if(strcmp(q-&amp;gt;borrow[0].borrow_book_num,&amp;quot;0&amp;quot;)!=0) &lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
/*先判断此读者是否已经借书,再判断此读者是否要借两本一样的书*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++) /*遍历一次读者所借的书,如果发现有重复,则结束*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(strcmp(q-&amp;gt;borrow[i].borrow_book_num,bo_num)==0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n抱歉!同一个读者不能同借两本相同的书!\n&amp;quot;);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(strcmp(q-&amp;gt;borrow[i].borrow_book_num,&amp;quot;0&amp;quot;)==0)&lt;br /&gt;&#xD;
/*如果没有重复,则借书完毕*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
strcpy(q-&amp;gt;borrow[q-&amp;gt;right++].borrow_book_num,bo_num); &lt;br /&gt;&#xD;
/*记录所借书号,并且借书数目加一,现存量减一*/&lt;br /&gt;&#xD;
p-&amp;gt;book_xc--;&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者编号%s借书完毕!按任意键继续下步操作..&amp;quot;,q-&amp;gt;reader_num);&lt;br /&gt;&#xD;
goto END;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else /*如果前面的要求都满足,并且此读者从未借过书,则借书完毕*/ &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
strcpy(q-&amp;gt;borrow[q-&amp;gt;right++].borrow_book_num,bo_num);&lt;br /&gt;&#xD;
p-&amp;gt;book_xc--;&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者编号%s借书完毕!按任意键继续下步操作..&amp;quot;,q-&amp;gt;reader_num);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
END:&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Return_Book() /*还书*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p; RD *q;&lt;br /&gt;&#xD;
int i,j,find=0;&lt;br /&gt;&#xD;
char return_book_num[10],return_reader_num[10];&lt;br /&gt;&#xD;
p=h_book; q=h_reader;&lt;br /&gt;&#xD;
printf(&amp;quot;\n还书模块...\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入要还书的读者编号:&amp;quot;); /*基本同上*/&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,return_reader_num);&lt;br /&gt;&#xD;
while(q-&amp;gt;next!=NULL&amp;amp;&amp;amp;strcmp(return_reader_num,q-&amp;gt;reader_num)!=0) &lt;br /&gt;&#xD;
q=q-&amp;gt;next;&lt;br /&gt;&#xD;
if(q-&amp;gt;next==NULL&amp;amp;&amp;amp;strcmp(return_reader_num,q-&amp;gt;reader_num)!=0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!此读者编号不存在!按任意键返回..\n&amp;quot;);&lt;br /&gt;&#xD;
goto End_return_book;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入读者还书的编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,return_book_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(p-&amp;gt;next!=NULL&amp;amp;&amp;amp;strcmp(return_book_num,p-&amp;gt;book_num)!=0)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(p-&amp;gt;next==NULL&amp;amp;&amp;amp;strcmp(return_book_num,p-&amp;gt;book_num)!=0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!此图书编号不存在!按任意键返回..\n&amp;quot;);&lt;br /&gt;&#xD;
goto End_return_book;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
if(strcmp(return_book_num,q-&amp;gt;borrow[i].borrow_book_num)==0) &lt;br /&gt;&#xD;
/*如果此读者借了此书,则还书完毕*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
find++;&lt;br /&gt;&#xD;
/*设置标志,用于判断读者是否借了此书,若借了,则find=1,否则为0*/&lt;br /&gt;&#xD;
for(j=i;j&amp;lt;Max;j++)&lt;br /&gt;&#xD;
strcpy(q-&amp;gt;borrow[j].borrow_book_num,q-&amp;gt;borrow[j+1].borrow_book_num); &lt;br /&gt;&#xD;
strcpy(q-&amp;gt;borrow[Max-1].borrow_book_num,&amp;quot;0&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
p-&amp;gt;book_xc++;&lt;br /&gt;&#xD;
q-&amp;gt;right--;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号%s的读者还书完毕!按任意键继续下步操作..&amp;quot;,return_reader_num);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(strcmp(return_book_num,q-&amp;gt;borrow[Max-1].borrow_book_num)!=0&amp;amp;&amp;amp;find==0) &lt;br /&gt;&#xD;
/*为什么有个find==0,因为遍历时循环Max次,如循环完毕还没有找到,&lt;br /&gt;&#xD;
则说明读者没有借此书,find用来保证只打印一次结果,否则每循环一次就会打印一个结果*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!此读者未借此书!按任意键返回..\n&amp;quot;);&lt;br /&gt;&#xD;
/*如果遍历读者所借的书号,发现读者未借此书,则提示错误!*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
End_return_book:&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void del_old_book() /*删除旧图书*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p,*q;&lt;br /&gt;&#xD;
char del_num[10];&lt;br /&gt;&#xD;
p=h_book;&lt;br /&gt;&#xD;
printf(&amp;quot;\n旧书出库模块\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入要出库的图书编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,del_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;book_num,del_num)!=0&amp;amp;&amp;amp;p-&amp;gt;next!=NULL) /*遍历图书链表*/&lt;br /&gt;&#xD;
{ q=p; p=p-&amp;gt;next; }&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;book_num,del_num)==0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p-&amp;gt;book_kc!=p-&amp;gt;book_xc) /*如果库存不等于现存,则说明读者还未归还图书,不能出库,否则数据错误*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n抱歉,此图书未归还,不能出库!按任意键返回...&amp;quot;);&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{ /*删除结点的基本操作*/&lt;br /&gt;&#xD;
if(p==h_book)&lt;br /&gt;&#xD;
h_book=p-&amp;gt;next;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
q-&amp;gt;next=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号为%s的图书删除完毕!按任意键继续...&amp;quot;,del_num);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n你输入的图书编号不存在!按任意键返回...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void del_old_reader() /*删除旧的读者*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p,*q;&lt;br /&gt;&#xD;
char del_num[10];&lt;br /&gt;&#xD;
p=h_reader;&lt;br /&gt;&#xD;
printf(&amp;quot;\n删除旧读者模块\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入要删除的读者编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,del_num);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(strcmp(p-&amp;gt;reader_num,del_num)!=0&amp;amp;&amp;amp;p-&amp;gt;next!=NULL) /*遍历读者链表*/&lt;br /&gt;&#xD;
{ q=p; p=p-&amp;gt;next; }&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;reader_num,del_num)==0) &lt;br /&gt;&#xD;
/*如果读者信息存在,但还有书未归还,则不能删除其信息,否则数据会出错*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;borrow[0].borrow_book_num,&amp;quot;0&amp;quot;)!=0)&lt;br /&gt;&#xD;
printf(&amp;quot;\n抱歉,此读者还有图书没有归还,不能删除其信息!\n按任意键继续...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p==h_reader)&lt;br /&gt;&#xD;
h_reader=p-&amp;gt;next;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
q-&amp;gt;next=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号为%s的读者删除完毕!按任意键继续...&amp;quot;,del_num);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n你输入的读者编号不存在!按任意键返回...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Print() /*打印菜单(同上)*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t打印全部信息菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0----返回上级 1----关于系统 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2----打印图书 3----打印读者 \t*\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=================================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;) &lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn); &lt;br /&gt;&#xD;
fflush(stdin); &lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;3)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn; &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Print_Select()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;); /*同上*/&lt;br /&gt;&#xD;
for(;;) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Print())&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;); Menu_select(); break; &lt;br /&gt;&#xD;
case 1:about();break;&lt;br /&gt;&#xD;
case 2:Print_book();break;&lt;br /&gt;&#xD;
case 3:Print_reader();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!&amp;quot;);exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
void Print_book()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p;&lt;br /&gt;&#xD;
p=h_book;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n库存图书信息如下:\n\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;BookNo.\t\tBookName\tXianCun \tKuCun\n&amp;quot;); &lt;br /&gt;&#xD;
/*很简单,直接打印所有图书的信息,遍历链表一次就可以了*/&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;%s\t\t%s\t\t%3d\t\t%3d\n&amp;quot;,p-&amp;gt;book_num,p-&amp;gt;book_name,p-&amp;gt;book_xc,p-&amp;gt;book_kc);&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n图书信息打印完毕!按任意键继续下一步操作..&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Print_reader() &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p;&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
p=h_reader;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n库存读者信息如下:\n\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;ReaderNo.\tReaderName&amp;quot;); /*上面已经解释为什么要这样处理*/&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
printf(&amp;quot;\tBorrowBookNum%d&amp;quot;,i+1);&lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
while(p!=NULL) /*遍历链表一次就可以了*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;%s\t\t%s&amp;quot;,p-&amp;gt;reader_num,p-&amp;gt;reader_name);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;Max;i++)&lt;br /&gt;&#xD;
printf(&amp;quot;\t\t%7s&amp;quot;,p-&amp;gt;borrow[i].borrow_book_num);&lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n读者信息打印完毕!按任意键继续下一步操作..&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void about() /*程序的一些说明*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\n\t\t\t关 于 本 系 统 的 说 明\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t1.本系统为模拟小型图书馆而设计,界面采用数字选择界面.\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t2.系统初始化时提示用户输入两组信息.\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t3.初始化完毕后每个读者的借书权限为3本.\n\n\t\t4.读者借书后会在其信息中记录所借书号,未借者书号均为 0.\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t5.由于时间等原因,系统的其他功能还不健全,望大家见谅!&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t\t6.建议:双击可执行文件后,在任务栏那点右键--&amp;gt;属性--&amp;gt;颜色\n\n\t\t 设置屏幕文字为:深蓝色(第10个) 屏幕背景为:淡绿色(第12个)&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t\t 具体方法请参看文件夹内Word文档.\n\n\t\t7.系统如有其他问题,请联系作者!&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t\t E-mail:dukai1008@163.com\tQQ:99598123&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\n\t\t阅 读 完 毕, 按 任 意 键 继 续 ...&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void book_not_enough() /*打印现存不足图书信息*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p;&lt;br /&gt;&#xD;
int i=0;&lt;br /&gt;&#xD;
p=h_book;&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p-&amp;gt;book_xc==0) /*直接判断现存量*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
i++; /*标志变量(同上)*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n库存不足的图书有:\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\nBookNumber\t\tBookName\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;%s\t\t\t%s\n&amp;quot;,p-&amp;gt;book_num,p-&amp;gt;book_name);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(p==NULL&amp;amp;&amp;amp;i==0)&lt;br /&gt;&#xD;
printf(&amp;quot;\n暂时没有库存不足的图书!&amp;quot;);&lt;br /&gt;&#xD;
getch(); system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Save() /*保存函数*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
Save_Reader();&lt;br /&gt;&#xD;
Save_Book();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Save_Reader() &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp_reader;&lt;br /&gt;&#xD;
RD *p,*p0;&lt;br /&gt;&#xD;
p=h_reader;&lt;br /&gt;&#xD;
if((fp_reader=fopen(&amp;quot;Reader.dat&amp;quot;,&amp;quot;wb&amp;quot;))==NULL) /*创建文件,进行保存*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件保存失败!\n请重新启动本系统...\n&amp;quot;);&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(fwrite(p,sizeof(RD),1,fp_reader)!=1) /*将链表中的信息写入文件中*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n写入文件失败!\n请重新启动本系统!\n&amp;quot;);&lt;br /&gt;&#xD;
p0=p;&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p0); /*释放所有结点*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
h_reader=NULL;&lt;br /&gt;&#xD;
fclose(fp_reader); &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Save_Book()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp_book; /*同上*/&lt;br /&gt;&#xD;
BK *p,*p0;&lt;br /&gt;&#xD;
p=h_book;&lt;br /&gt;&#xD;
if((fp_book=fopen(&amp;quot;Book.dat&amp;quot;,&amp;quot;wb&amp;quot;))==NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件保存失败!\n请重新启动本系统...\n&amp;quot;);&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(fwrite(p,sizeof(BK),1,fp_book)!=1)&lt;br /&gt;&#xD;
printf(&amp;quot;\n写入文件失败!\n请重新启动本系统!\n&amp;quot;);&lt;br /&gt;&#xD;
p0=p;&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p0); &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
h_book=NULL;&lt;br /&gt;&#xD;
fclose(fp_book); &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Load() /*加载已保存的文件*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
Load_Reader();&lt;br /&gt;&#xD;
Load_Book();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Load_Reader()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
RD *p1,*p2,*p3;&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
fp=fopen(&amp;quot;Reader.dat&amp;quot;,&amp;quot;rb&amp;quot;);&lt;br /&gt;&#xD;
p1=(RD *)malloc(sizeof(RD));&lt;br /&gt;&#xD;
fread(p1,sizeof(RD),1,fp);&lt;br /&gt;&#xD;
h_reader=p3=p2=p1;&lt;br /&gt;&#xD;
while(! feof(fp)) /*读出信息,重新链入链表*/&lt;br /&gt;&#xD;
{ p1=(RD *)malloc(sizeof(RD));&lt;br /&gt;&#xD;
fread(p1,sizeof(RD),1,fp);&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1;&lt;br /&gt;&#xD;
p3=p2;&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p3-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
free(p1);&lt;br /&gt;&#xD;
fclose(fp);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Load_Book()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
BK *p1,*p2,*p3;&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
fp=fopen(&amp;quot;Book.dat&amp;quot;,&amp;quot;rb&amp;quot;); /*同上*/&lt;br /&gt;&#xD;
p1=(BK *)malloc(sizeof(BK));&lt;br /&gt;&#xD;
fread(p1,sizeof(BK),1,fp);&lt;br /&gt;&#xD;
h_book=p3=p2=p1;&lt;br /&gt;&#xD;
while(! feof(fp))&lt;br /&gt;&#xD;
{ p1=(BK *)malloc(sizeof(BK));&lt;br /&gt;&#xD;
fread(p1,sizeof(BK),1,fp);&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1;&lt;br /&gt;&#xD;
p3=p2;&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p3-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
free(p1);&lt;br /&gt;&#xD;
fclose(fp);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void main() &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp_book,*fp_reader;&lt;br /&gt;&#xD;
if((fp_book=fopen(&amp;quot;Book.dat&amp;quot;,&amp;quot;rb&amp;quot;))==NULL||(fp_reader=fopen(&amp;quot;Reader.dat&amp;quot;,&amp;quot;rb&amp;quot;))==NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
about(); /*第一次启动系统,则进行初始化,否则进行加载*/&lt;br /&gt;&#xD;
Init();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
Load();&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
Menu_select(); /*调用主菜单*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;span style="color: #0000ff"&gt;&lt;span style="font-size: small"&gt;&lt;span style="font-family: 隶书"&gt;如有需要原程序学习的朋友,可以留下你的邮箱,我会在第一时间将程序发到你邮箱（包括可执行文件）&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
使用时必须注明版权所有,本程序最终版权归作者杜凯所有&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
由于此空间不支持下载，所以不能提供下载功能,由此带来的不便,请谅解&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
mail:dukai1008@163.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;</description>
      <category>我的文章</category>
      <pubDate>Wed, 24 Aug 2011 08:46:59 GMT</pubDate>
      <guid>ArticleDetail.action?id=13</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-08-24T08:46:59Z</dc:date>
    </item>
    <item>
      <title>通讯录系统(C版)</title>
      <link>ArticleDetail.action?id=12</link>
      <description>/*************************&lt;br /&gt;&#xD;
* 运行环境:vc++6.0&lt;br /&gt;&#xD;
*************************/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
#include &amp;lt;stdio.h&amp;gt; /*头文件名*/&lt;br /&gt;&#xD;
#include &amp;lt;string.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;malloc.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;stdlib.h&amp;gt;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
typedef struct linker /*定义结构体*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int num; /*联系人编号*/&lt;br /&gt;&#xD;
char name[7]; /*姓名*/&lt;br /&gt;&#xD;
char sex; /*性别*/&lt;br /&gt;&#xD;
int age; /*年龄*/&lt;br /&gt;&#xD;
char tel[12]; /*电话*/&lt;br /&gt;&#xD;
char addr[20]; /*联系地址*/&lt;br /&gt;&#xD;
char temp[30]; /*临时增加信息*/&lt;br /&gt;&#xD;
struct linker *next;&lt;br /&gt;&#xD;
}LIN;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
LIN *head; /*定义全局Head*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Menu(); /*菜单函数*/&lt;br /&gt;&#xD;
void Menu_select(); /*菜单选择函数*/&lt;br /&gt;&#xD;
void Creat(); /*创建联系人(相当于初始化)*/&lt;br /&gt;&#xD;
void Insert(); /*增加联系人*/&lt;br /&gt;&#xD;
void Del(); /*删除联系人*/&lt;br /&gt;&#xD;
void Find(); /*查找联系人信息*/&lt;br /&gt;&#xD;
int Find_menu(); /*查找菜单*/&lt;br /&gt;&#xD;
void Num_search(); /*按编号查找*/&lt;br /&gt;&#xD;
void Name_search(); /*按姓名查找*/&lt;br /&gt;&#xD;
void Add(); /*增加联系人信息*/&lt;br /&gt;&#xD;
void Alter(); /*修改联系人信息*/&lt;br /&gt;&#xD;
int Alter_menu();/*修改菜单*/&lt;br /&gt;&#xD;
void Alter_name(); /*修改姓名*/&lt;br /&gt;&#xD;
void Alter_sex(); /*性别*/&lt;br /&gt;&#xD;
void Alter_age(); /*年龄*/&lt;br /&gt;&#xD;
void Alter_tel(); /*电话*/&lt;br /&gt;&#xD;
void Alter_addr(); /*地址*/&lt;br /&gt;&#xD;
void List(); /*打印所有联系人信息*/&lt;br /&gt;&#xD;
void List_exsit_num(); /*打印当前存在的联系人的编号*/&lt;br /&gt;&#xD;
void List_pass_now(LIN *p); /*打印联系人修改前信息和修改后信息*/&lt;br /&gt;&#xD;
void Save(); /*存档输入信息*/&lt;br /&gt;&#xD;
void Load(); /*加载存档信息*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Menu() /*菜单界面*/&lt;br /&gt;&#xD;
{ int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 通 讯 录 菜 单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;============================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0.退出系统\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t1.增加联系人 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2.删除联系人 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t3.增加联系人信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t4.修改联系人信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t5.查询联系人信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t6.输出全部信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;============================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;) /*空语句确保选择正确的代码*/&lt;br /&gt;&#xD;
{ scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn); &lt;br /&gt;&#xD;
fflush(stdin); /*吸收多余字符*/&lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;6)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn; /*返回选择的正确代码到Menu_select()*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Menu_select()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(;;) /*空语句确保可以重复进行选择*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Menu()) /*重复调用菜单函数进行重复选择*/&lt;br /&gt;&#xD;
{ case 0:&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
Save(); /*保存文件*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t文件保存成功!\n&amp;quot;); /*给出提示-文件已保存*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\tGoodBye!\n&amp;quot;); /*结束界面*/&lt;br /&gt;&#xD;
getch(); /*停留用户界面(下同)*/&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
case 1:Insert();break;&lt;br /&gt;&#xD;
case 2:Del();break;&lt;br /&gt;&#xD;
case 3:Add();break;&lt;br /&gt;&#xD;
case 4:Alter();break;&lt;br /&gt;&#xD;
case 5:Find();break;&lt;br /&gt;&#xD;
case 6:List();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!&amp;quot;);exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Creat() /*创建联系人*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
p=(LIN *)malloc(sizeof(LIN));&lt;br /&gt;&#xD;
head=NULL;&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件为空!\n&amp;quot;); &lt;br /&gt;&#xD;
printf(&amp;quot;\n初始化开始.....\n&amp;quot;);&lt;br /&gt;&#xD;
p-&amp;gt;num=1000;&lt;br /&gt;&#xD;
p-&amp;gt;age=20;&lt;br /&gt;&#xD;
p-&amp;gt;sex=&amp;rsquo;m&amp;rsquo;;&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;name,&amp;quot;dukai&amp;quot;);&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;addr,&amp;quot;wuhan&amp;quot;);&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;tel,&amp;quot;15971401445&amp;quot;);&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;temp,&amp;quot;Empty&amp;quot;); /*将临时信息设置为空(下同)*/&lt;br /&gt;&#xD;
head=p;&lt;br /&gt;&#xD;
p-&amp;gt;next=NULL; /*头结点创建完毕*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n初始化完毕...\n\n按任意键继续....&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Insert() /*增加联系人*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p,*p0,*p1,*p2;&lt;br /&gt;&#xD;
p0=p1=p2=head;&lt;br /&gt;&#xD;
if(p1==NULL) /*如果出现意外情况导致链表为空,则进行&amp;quot;创建头结点&amp;quot;*/&lt;br /&gt;&#xD;
Creat();&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
p=(LIN *)malloc(sizeof(LIN));&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入增加的联系人信息\n&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
reinput_num1:&lt;br /&gt;&#xD;
printf(&amp;quot;No.(1000--2000):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p-&amp;gt;num);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
while(p-&amp;gt;num&amp;gt;p0-&amp;gt;num&amp;amp;&amp;amp;p0-&amp;gt;next!=NULL) /*判断编号是否已经存在*/&lt;br /&gt;&#xD;
p0=p0-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==p0-&amp;gt;num) /*如果编号相同,则给出提示,并且进行重新输入*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n此编号已存在,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_num1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(p-&amp;gt;num&amp;gt;2000||p-&amp;gt;num&amp;lt;1000) /*判断编号是否已经超出范围,并给出提示*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_num1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
reinput_name:&lt;br /&gt;&#xD;
printf(&amp;quot;Name(6):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p-&amp;gt;name);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(p-&amp;gt;name)&amp;gt;6)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_name;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
reinput_sex1:&lt;br /&gt;&#xD;
printf(&amp;quot;Sex:(m&amp;amp;f)&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%c&amp;quot;,&amp;amp;p-&amp;gt;sex);&lt;br /&gt;&#xD;
fflush(stdin); /*此处为一个字符,容易被转行符取代*/&lt;br /&gt;&#xD;
if(p-&amp;gt;sex!=&amp;rsquo;m&amp;rsquo;&amp;amp;&amp;amp;p-&amp;gt;sex!=&amp;rsquo;f&amp;rsquo;) /*限制性别在这两个字符中*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n输入错误,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_sex1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;Age:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p-&amp;gt;age);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
reinput_tel:&lt;br /&gt;&#xD;
printf(&amp;quot;Tel(11):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p-&amp;gt;tel);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(p-&amp;gt;tel)&amp;gt;11) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_tel;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
reinput_addr:&lt;br /&gt;&#xD;
printf(&amp;quot;Addr(20):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p-&amp;gt;addr);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(p-&amp;gt;addr)&amp;gt;20)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput_addr;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;temp,&amp;quot;Empty&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(p-&amp;gt;num&amp;gt;p1-&amp;gt;num&amp;amp;&amp;amp;p1-&amp;gt;next!=NULL) /*将新结点插入*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
p1=p1-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(p-&amp;gt;num&amp;lt;p1-&amp;gt;num) /*使编号按顺序插入*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p1==head) /*插入头*/&lt;br /&gt;&#xD;
head=p;&lt;br /&gt;&#xD;
else p2-&amp;gt;next=p; /*插入中间*/&lt;br /&gt;&#xD;
p-&amp;gt;next=p1; &lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else /*插入最后*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p1-&amp;gt;next=p;&lt;br /&gt;&#xD;
p-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
} &lt;br /&gt;&#xD;
printf(&amp;quot;\n增加联系人完毕...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void List_exsit_num()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int i=0; /*i为记数器*/&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n以下是已经存在的联系人编号:\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=============================\n&amp;quot;);&lt;br /&gt;&#xD;
while(p!=NULL) /*计算联系人个数*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;%8d&amp;quot;,p-&amp;gt;num);&lt;br /&gt;&#xD;
i++; &lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(i==3) /*3个一换行（下同）*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n=============================\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Del() /*删除联系人*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p1,*p2;&lt;br /&gt;&#xD;
int del_num;&lt;br /&gt;&#xD;
printf(&amp;quot;\n删除进行中....\n&amp;quot;);&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p1=head;&lt;br /&gt;&#xD;
Re_del_num:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入删除的编号(1000--2000):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;del_num);&lt;br /&gt;&#xD;
if(del_num&amp;lt;1000||del_num&amp;gt;2000) /*判断*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto Re_del_num;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(del_num!=p1-&amp;gt;num&amp;amp;&amp;amp;p1-&amp;gt;next!=NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
p1=p1-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(del_num==p1-&amp;gt;num) /*找到*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p1==head) /*删除头结点*/&lt;br /&gt;&#xD;
head=p1-&amp;gt;next;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1-&amp;gt;next; /*删除中间结点*/&lt;br /&gt;&#xD;
free(p1);&lt;br /&gt;&#xD;
printf(&amp;quot;\n删除联系人完毕...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人编号不存在!请按任意键返回!\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Find() /*查询*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
while(1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Find_menu())&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;); Menu_select(); break;&lt;br /&gt;&#xD;
case 1:Num_search();break;&lt;br /&gt;&#xD;
case 2:Name_search();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!\n&amp;quot;); return;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Find_menu() /*查询菜单*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int se;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 查询菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 0.返回上级 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 1.按编号查询 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 2.按姓名查询 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应的代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;) /*同上*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;se);&lt;br /&gt;&#xD;
getchar();&lt;br /&gt;&#xD;
if(se&amp;gt;2||se&amp;lt;0)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新选择:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return se; /*同上*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Num_search() /*按联系人编号查询*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int find_num; /*i为记数器*/&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入要查询的编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;find_num);&lt;br /&gt;&#xD;
p=head; /*重新指向头结点(下同)*/&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=find_num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==find_num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot; No.\tName\tSex\tAge\tTelphone\tAddress\t\tAdd-Message\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;%d\t%s\t %c\t%d\t%s\t%s\t\t%s\n&amp;quot;,p-&amp;gt;num,p-&amp;gt;name,p-&amp;gt;sex,p-&amp;gt;age,p-&amp;gt;tel,p-&amp;gt;addr,p-&amp;gt;temp);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在,按任意键返回!\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
void Name_search() /*按联系人姓名查询*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int i=0,find=0; /*i为记数器，find为标示符*/&lt;br /&gt;&#xD;
char find_name[6];&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n以下是已存在的联系人姓名:\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=============================\n&amp;quot;);&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;%8s&amp;quot;,p-&amp;gt;name);&lt;br /&gt;&#xD;
i++;&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(i==3) /*同上*/&lt;br /&gt;&#xD;
printf(&amp;quot;\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n=============================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入要查询的姓名:&amp;quot;);&lt;br /&gt;&#xD;
gets(find_name);&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(strcmp(p-&amp;gt;name,find_name)==0)&lt;br /&gt;&#xD;
find=1;&lt;br /&gt;&#xD;
if(find==1) /*找到,并打印*/&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
printf(&amp;quot; \nNo.\tName\tSex\tAge\tTelphone\tAddress\t\tAdd-Message\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;%d\t%s\t %c\t%d\t%s\t%s\t\t%s\n&amp;quot;,p-&amp;gt;num,p-&amp;gt;name,p-&amp;gt;sex,p-&amp;gt;age,p-&amp;gt;tel,p-&amp;gt;addr,p-&amp;gt;temp);&lt;br /&gt;&#xD;
find=0;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=p-&amp;gt;next; /*继续向下指*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void List_pass_now(LIN *p)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot; No.\tName\tSex\tAge\tTelphone\tAddress\t\tAdd-Message\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;%d\t%s\t %c\t%d\t%s\t%s\t\t%s\n&amp;quot;,p-&amp;gt;num,p-&amp;gt;name,p-&amp;gt;sex,p-&amp;gt;age,p-&amp;gt;tel,p-&amp;gt;addr,p-&amp;gt;temp);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Add()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
char add_message[30];&lt;br /&gt;&#xD;
int add_num;&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要增加信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;add_num);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=add_num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==add_num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
Reinput_mess:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要增加的内容(30)..\n两单词之间用&amp;rsquo;-&amp;rsquo;隔开,例如(very-good)..\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;Message:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,add_message);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(add_message)&amp;gt;30)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto Reinput_mess;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;temp,add_message);&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息增加后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n增加联系人信息完毕....\n\n按任意键继续...&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n输入的联系人编号不存在!\n\n按任意键返回!&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Alter()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
while(1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(Alter_menu())&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;); Menu_select(); break;&lt;br /&gt;&#xD;
case 1:Alter_name();break;&lt;br /&gt;&#xD;
case 2:Alter_sex();break;&lt;br /&gt;&#xD;
case 3:Alter_age();break;&lt;br /&gt;&#xD;
case 4:Alter_tel();break;&lt;br /&gt;&#xD;
case 5:Alter_addr();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!\n&amp;quot;); return;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int Alter_menu()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 修 改 菜 单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;============================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0.返回上级\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t1.修改姓名\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2.修改性别\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t3.修改年龄\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t4.修改电话\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t5.修改地址\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;============================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;) &lt;br /&gt;&#xD;
{ scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn); &lt;br /&gt;&#xD;
fflush(stdin); &lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;5)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Alter_name()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int num;&lt;br /&gt;&#xD;
char name_alter[7];&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
REINPUT_NAME:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改的信息(Name(6)):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,name_alter);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(name_alter)&amp;gt;6) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto REINPUT_NAME;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;name,name_alter);&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人姓名修改后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n姓名修改完毕!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Alter_sex() &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int num;&lt;br /&gt;&#xD;
char sex_alter;&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
REINPUT_SEX:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改的信息(m&amp;amp;f):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%c&amp;quot;,&amp;amp;sex_alter);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(sex_alter!=&amp;rsquo;m&amp;rsquo;&amp;amp;&amp;amp;sex_alter!=&amp;rsquo;f&amp;rsquo;) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n输入错误,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto REINPUT_SEX;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p-&amp;gt;sex=sex_alter;&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人性别修改后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n性别修改完毕!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
void Alter_age()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int num,age_alter=0;&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
REINPUT_AGE:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改的信息(Age):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;age_alter);&lt;br /&gt;&#xD;
if(age_alter&amp;lt;0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n输入错误,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto REINPUT_AGE;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p-&amp;gt;age=age_alter;&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人年龄修改后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n年龄修改完毕!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Alter_tel()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int num;&lt;br /&gt;&#xD;
char tel_alter[12];&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
REINPUT_TEL:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改的信息(tel(11)):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,tel_alter);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(tel_alter)&amp;gt;11) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto REINPUT_TEL;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;tel,tel_alter);&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人电话修改后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n电话修改完毕!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Alter_addr()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int num;&lt;br /&gt;&#xD;
char addr_alter[20];&lt;br /&gt;&#xD;
List_exsit_num();&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改信息的联系人编号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;num);&lt;br /&gt;&#xD;
while(p-&amp;gt;num!=num&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;num==num)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人信息为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
REINPUT_ADDR:&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你要修改的信息(Addr(20)):&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,addr_alter);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(strlen(addr_alter)&amp;gt;20) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;超出长度!请缩减长度!\n&amp;quot;);&lt;br /&gt;&#xD;
goto REINPUT_ADDR;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
strcpy(p-&amp;gt;addr,addr_alter);&lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人地址修改后为:\n&amp;quot;);&lt;br /&gt;&#xD;
List_pass_now(p);&lt;br /&gt;&#xD;
printf(&amp;quot;\n地址修改完毕!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号不存在!按任意键继续...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void List() /*打印所有联系人*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
LIN *p;&lt;br /&gt;&#xD;
int n=0; /*计算所有联系人个数*/&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
if(p==NULL) /*如果出现意外情况导致链表为空,则进行&amp;quot;创建头结点&amp;quot;*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;链表为空,转入初始化...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
Creat();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p=p-&amp;gt;next; /*计算所有联系人个数*/&lt;br /&gt;&#xD;
n++;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=head; &lt;br /&gt;&#xD;
printf(&amp;quot;\n联系人个数为:%d\n&amp;quot;,n);&lt;br /&gt;&#xD;
printf(&amp;quot; No.\tName\tSex\tAge\tTelphone\tAddress\t\tAdd-Message\n&amp;quot;);&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;%d\t%s\t %c\t%d\t%s\t%s\t\t%s\n&amp;quot;,p-&amp;gt;num,p-&amp;gt;name,p-&amp;gt;sex,p-&amp;gt;age,p-&amp;gt;tel,p-&amp;gt;addr,p-&amp;gt;temp);&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Save() /*保存*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
LIN *p,*p0;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
if((fp=fopen(&amp;quot;Linker.dat&amp;quot;,&amp;quot;wb&amp;quot;))==NULL) /*新建文件*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件保存失败!\n请重新启动本系统...\n&amp;quot;);&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL) /*写入文件*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(fwrite(p,sizeof(LIN),1,fp)!=1)&lt;br /&gt;&#xD;
printf(&amp;quot;\n写入文件失败!\n请重新启动本系统!\n&amp;quot;);&lt;br /&gt;&#xD;
p0=p;&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p0); /*释放所有结点*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
head=NULL;&lt;br /&gt;&#xD;
fclose(fp); /*关闭文件(下同)*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Load() /*载入保存内容*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
LIN *p1,*p2,*p3;&lt;br /&gt;&#xD;
fp=fopen(&amp;quot;Linker.dat&amp;quot;,&amp;quot;rb&amp;quot;); /*打开*/&lt;br /&gt;&#xD;
p1=(LIN *)malloc(sizeof(LIN)); /*创建新链表的头结点*/&lt;br /&gt;&#xD;
fread(p1,sizeof(LIN),1,fp); /*读出内容*/&lt;br /&gt;&#xD;
head=p2=p3=p1;&lt;br /&gt;&#xD;
while(!feof(fp))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p1=(LIN *)malloc(sizeof(LIN));&lt;br /&gt;&#xD;
fread(p1,sizeof(LIN),1,fp);&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1;&lt;br /&gt;&#xD;
p3=p2;&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p3-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
free(p1); /*释放多余的空间*/&lt;br /&gt;&#xD;
fclose(fp); &lt;br /&gt;&#xD;
if(feof(fp))&lt;br /&gt;&#xD;
printf(&amp;quot;载入已保存文件0_0失败0_0...\n&amp;quot;);&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n载入已保存文件^_^成功^_^...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void main()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
if((fp=fopen(&amp;quot;Linker.dat&amp;quot;,&amp;quot;rb&amp;quot;))==NULL) /*如果文件为空,则进行初始化*/&lt;br /&gt;&#xD;
Creat();&lt;br /&gt;&#xD;
else Load(); /*否则加载已保存内容*/&lt;br /&gt;&#xD;
Menu_select(); /*调用菜单*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;span style="color: #0000ff"&gt;&lt;span style="font-size: small"&gt;&lt;span style="font-family: 隶书"&gt;&lt;span style="color: #0000ff"&gt;&lt;span style="font-size: small"&gt;&lt;span style="font-family: 隶书"&gt;如有需要原程序学习的朋友,可以留下你的邮箱,我会在第一时间将程序发到你邮箱（包括可执行文件）&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
使用时必须注明版权所有,本程序最终版权归作者杜凯所有&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
由于此空间不支持下载，所以不能提供下载功能,由此带来的不便,请谅解&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
mail:dukai1008@163.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;font color="#000000" size="2"&gt; &lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;</description>
      <category>我的文章</category>
      <pubDate>Wed, 24 Aug 2011 08:44:28 GMT</pubDate>
      <guid>ArticleDetail.action?id=12</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-08-24T08:44:28Z</dc:date>
    </item>
    <item>
      <title>运动会记分系统(C版)</title>
      <link>ArticleDetail.action?id=11</link>
      <description>&lt;p&gt;/*************************&lt;br /&gt;&#xD;
* 运行环境:vc++6.0&lt;br /&gt;&#xD;
*************************/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;string.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;malloc.h&amp;gt;&lt;br /&gt;&#xD;
#include &amp;lt;stdlib.h&amp;gt;&lt;br /&gt;&#xD;
#define MaxSize 10&lt;br /&gt;&#xD;
typedef struct athlete&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
char name[10]; /*运动员姓名*/&lt;br /&gt;&#xD;
int score; /*运动员分数*/&lt;br /&gt;&#xD;
}ATH;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
typedef struct school&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int item; /*项目号*/&lt;br /&gt;&#xD;
int num[MaxSize]; /*学校编号*/&lt;br /&gt;&#xD;
ATH athlete[MaxSize];&lt;br /&gt;&#xD;
struct school *next;&lt;br /&gt;&#xD;
}SCH;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
SCH *head; /*设置全局指针*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int menu();&lt;br /&gt;&#xD;
int menuselect(); /*主菜单*/&lt;br /&gt;&#xD;
void about(); /*程序的一些解释*/&lt;br /&gt;&#xD;
void init(); /*初始化*/&lt;br /&gt;&#xD;
void insert(); /*插入*/&lt;br /&gt;&#xD;
void del(); /*删除*/&lt;br /&gt;&#xD;
void search(); /*查询*/&lt;br /&gt;&#xD;
int semenu(); /*查询菜单*/&lt;br /&gt;&#xD;
void item_search(); /*按项目号查询*/&lt;br /&gt;&#xD;
void num_search(); /*按学校编号查询*/&lt;br /&gt;&#xD;
void calculate(); /*计算分数*/&lt;br /&gt;&#xD;
void print(); /*打印*/&lt;br /&gt;&#xD;
int printmenu(); /*打印菜单*/&lt;br /&gt;&#xD;
void print_item(); /*打印所有项目信息*/&lt;br /&gt;&#xD;
void print_school(); /*打印所以学校信息*/&lt;br /&gt;&#xD;
void Save(); /*存档输入信息*/&lt;br /&gt;&#xD;
void Load(); /*加载存档信息*/&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int menu()&lt;br /&gt;&#xD;
{ int sn;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 运动会记分系统\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;===========================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t0.退出系统\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t1.增加项目\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t2.删除项目\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t3.查找信息\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;*\t4.输出结果\t *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;===========================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;请选择相应代码: &amp;quot;);&lt;br /&gt;&#xD;
while(1)&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;sn);&lt;br /&gt;&#xD;
fflush(stdin);&lt;br /&gt;&#xD;
if(sn&amp;lt;0||sn&amp;gt;4)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新输入: &amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return sn;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int menuselect()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(;;)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(menu())&lt;br /&gt;&#xD;
{ case 0:&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
Save();&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t保存成功!&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\tGOOD BYE\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
case 1:insert();break;&lt;br /&gt;&#xD;
case 2:del();break;&lt;br /&gt;&#xD;
case 3:search();break;&lt;br /&gt;&#xD;
case 4:system(&amp;quot;cls&amp;quot;);print();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!&amp;quot;);exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void about()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\n\t\t 本 程 序 规 定\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\t===================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t学校总数为 %d\n&amp;quot;,MaxSize);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t男子运动项目数为 %d\n&amp;quot;,MaxSize);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t女子运动项目数为 %d\n&amp;quot;,MaxSize);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\t\t总运动项目数数为 %d\n&amp;quot;,2*MaxSize);&lt;br /&gt;&#xD;
printf(&amp;quot;\t===================================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n\n\t请按任意键继续....&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void init() /*建立头结点*/ &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p1; &lt;br /&gt;&#xD;
int i,m;&lt;br /&gt;&#xD;
p1=head;&lt;br /&gt;&#xD;
about();&lt;br /&gt;&#xD;
printf(&amp;quot;\n初始化开始....\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入一个项目的信息....\n&amp;quot;);&lt;br /&gt;&#xD;
p1=(SCH *)malloc(sizeof(SCH));&lt;br /&gt;&#xD;
head=p1;&lt;br /&gt;&#xD;
reinput: /*设置标志符(下同)*/&lt;br /&gt;&#xD;
printf(&amp;quot;项目号(1001--%d):&amp;quot;,1001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p1-&amp;gt;item);&lt;br /&gt;&#xD;
if((p1-&amp;gt;item)&amp;gt;(1001+MaxSize)||(p1-&amp;gt;item)&amp;lt;1001)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超过范围,重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(p1-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break; /*偶数取前3名*/&lt;br /&gt;&#xD;
case 1:m=5;break; /*奇数取前5名*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;此项目取前%d名...\n&amp;quot;,m);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;m;i++)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n第%d个选手信息:\n&amp;quot;,i+1);&lt;br /&gt;&#xD;
printf(&amp;quot;姓名:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p1-&amp;gt;athlete[i].name);&lt;br /&gt;&#xD;
reinputschool:&lt;br /&gt;&#xD;
printf(&amp;quot;学校编号(2001--%d):&amp;quot;,2001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p1-&amp;gt;num[i]);&lt;br /&gt;&#xD;
if(p1-&amp;gt;num[i]&amp;gt;(2001+MaxSize)||p1-&amp;gt;num[i]&amp;lt;2001)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinputschool;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p1-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
printf(&amp;quot;\n初始化项目完毕....\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void insert()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p1,*p2,*p0,*p;&lt;br /&gt;&#xD;
int m,i;&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
p0=(SCH *)malloc(sizeof(SCH));&lt;br /&gt;&#xD;
p=p1=head;&lt;br /&gt;&#xD;
printf(&amp;quot;\n开始增加运动项目.....\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入项目的信息....\n&amp;quot;);&lt;br /&gt;&#xD;
reinput:&lt;br /&gt;&#xD;
printf(&amp;quot;项目号(1001--%d):&amp;quot;,1001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p0-&amp;gt;item);&lt;br /&gt;&#xD;
while(p-&amp;gt;item!=p0-&amp;gt;item&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
if(p-&amp;gt;item==p0-&amp;gt;item)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n此项目号已存在!请重新输入\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if((p0-&amp;gt;item)&amp;gt;(1001+MaxSize)||(p0-&amp;gt;item)&amp;lt;1001)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超过范围,重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinput;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(p0-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break;&lt;br /&gt;&#xD;
case 1:m=5;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;此项目取前%d名...\n&amp;quot;,m);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;m;i++)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n第%d个选手信息:\n&amp;quot;,i+1);&lt;br /&gt;&#xD;
printf(&amp;quot;姓名:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%s&amp;quot;,p0-&amp;gt;athlete[i].name);&lt;br /&gt;&#xD;
reinputschool1:&lt;br /&gt;&#xD;
printf(&amp;quot;学校编号(2001--%d):&amp;quot;,2001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;p0-&amp;gt;num[i]);&lt;br /&gt;&#xD;
if(p0-&amp;gt;num[i]&amp;gt;(2001+MaxSize)||p0-&amp;gt;num[i]&amp;lt;2001)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围,请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto reinputschool1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while((p0-&amp;gt;item&amp;gt;p1-&amp;gt;item)&amp;amp;&amp;amp;(p1-&amp;gt;next!=NULL))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
p1=p1-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(p0-&amp;gt;item&amp;lt;p1-&amp;gt;item)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p1==head)&lt;br /&gt;&#xD;
head=p0;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
p2-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=p1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p1-&amp;gt;next=p0;&lt;br /&gt;&#xD;
p0-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n增加新项目完毕....\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
calculate();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void del()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p1,*p2;&lt;br /&gt;&#xD;
int del_item;&lt;br /&gt;&#xD;
p1=head;&lt;br /&gt;&#xD;
if(p1==NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!项目为空!\n\n按任意键转入初始化....\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
init();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n开始删除运动项目.....\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入你想删除的项目号:&amp;quot;);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;del_item);&lt;br /&gt;&#xD;
while((del_item!=p1-&amp;gt;item)&amp;amp;&amp;amp;(p1-&amp;gt;next!=NULL))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
p1=p1-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
if(del_item==p1-&amp;gt;item)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p1==head)&lt;br /&gt;&#xD;
head=p1-&amp;gt;next;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1-&amp;gt;next;&lt;br /&gt;&#xD;
free(p1);&lt;br /&gt;&#xD;
printf(&amp;quot;\n删除项目完毕....\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n你输入的项目号不存在!\n\n按任意键返回主菜单\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
} &lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void search()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
while(1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(semenu())&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;);menuselect();break;&lt;br /&gt;&#xD;
case 1:item_search();break;&lt;br /&gt;&#xD;
case 2:num_search();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!\n&amp;quot;); exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int semenu()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int se;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 查询菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 0.返回上级 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 1.按项目号查询 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 2.按学校编号查询 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请选择相应的代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;se);&lt;br /&gt;&#xD;
getchar();&lt;br /&gt;&#xD;
if(se&amp;gt;2||se&amp;lt;0)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新选择:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return se;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void item_search()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p;&lt;br /&gt;&#xD;
int search_item,i,m;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入查询的项目号(1001--%d):&amp;quot;,1001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;search_item);&lt;br /&gt;&#xD;
if(search_item&amp;lt;1001||search_item&amp;gt;(1001+MaxSize))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围!请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto research;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(search_item!=p-&amp;gt;item&amp;amp;&amp;amp;p-&amp;gt;next!=NULL)&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(search_item==p-&amp;gt;item)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n项目%d结果为:&amp;quot;,p-&amp;gt;item);&lt;br /&gt;&#xD;
switch(p-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break;&lt;br /&gt;&#xD;
case 1:m=5;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n学校编号\t选手姓名 选手分数\n&amp;quot;);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;m;i++)&lt;br /&gt;&#xD;
printf(&amp;quot;%d\t\t %s\t\t%d\n&amp;quot;,p-&amp;gt;num[i],p-&amp;gt;athlete[i].name,p-&amp;gt;athlete[i].score);&lt;br /&gt;&#xD;
printf(&amp;quot;\n按项目号查询完毕....\n按任意键返回&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n项目号不存在!请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
research:&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void num_search()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p;&lt;br /&gt;&#xD;
int search_num,i,m;&lt;br /&gt;&#xD;
int find=0;&lt;br /&gt;&#xD;
int menscore,womenscore,totalscore;&lt;br /&gt;&#xD;
totalscore=menscore=womenscore=0;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
switch(p-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break;&lt;br /&gt;&#xD;
case 1:m=5;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n请输入查询的学校编号(2001--%d):&amp;quot;,2001+MaxSize);&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;search_num);&lt;br /&gt;&#xD;
if(search_num&amp;lt;2001||search_num&amp;gt;(2001+MaxSize))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n超出范围!请重新输入!\n&amp;quot;);&lt;br /&gt;&#xD;
goto research_num;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;m;i++) &lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(search_num==p-&amp;gt;num[i])&lt;br /&gt;&#xD;
find=1;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(find==1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p-&amp;gt;item&amp;lt;MaxSize+1001)&lt;br /&gt;&#xD;
menscore+=p-&amp;gt;athlete[i].score;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
womenscore+=p-&amp;gt;athlete[i].score;&lt;br /&gt;&#xD;
totalscore=menscore+womenscore;&lt;br /&gt;&#xD;
find=0;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号为%d的学校成绩为:&amp;quot;,search_num);&lt;br /&gt;&#xD;
printf(&amp;quot;\n学校编号 男子总分 女子总分 团体总分\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot; %d\t\t%d\t%d\t%d\n&amp;quot;,search_num,menscore,womenscore,totalscore);&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
research_num:&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void calculate() /*赋分*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p;&lt;br /&gt;&#xD;
int i;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p-&amp;gt;item%2==0)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;3;i++)&lt;br /&gt;&#xD;
switch(i)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:p-&amp;gt;athlete[i].score=5;break;&lt;br /&gt;&#xD;
case 1:p-&amp;gt;athlete[i].score=3;break;&lt;br /&gt;&#xD;
case 2:p-&amp;gt;athlete[i].score=2;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;5;i++)&lt;br /&gt;&#xD;
switch(i)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:p-&amp;gt;athlete[i].score=7;break;&lt;br /&gt;&#xD;
case 1:p-&amp;gt;athlete[i].score=5;break;&lt;br /&gt;&#xD;
case 2:p-&amp;gt;athlete[i].score=3;break;&lt;br /&gt;&#xD;
case 3:p-&amp;gt;athlete[i].score=2;break;&lt;br /&gt;&#xD;
case 4:p-&amp;gt;athlete[i].score=1;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void print()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
while(1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(printmenu())&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:system(&amp;quot;cls&amp;quot;);menuselect();break;&lt;br /&gt;&#xD;
case 1:print_item();break;&lt;br /&gt;&#xD;
case 2:print_school();break;&lt;br /&gt;&#xD;
default:printf(&amp;quot;\n错误!\n&amp;quot;); exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
int printmenu()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
int se;&lt;br /&gt;&#xD;
printf(&amp;quot;\n 输出菜单\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 0.返回上级 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 1.输出项目信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;* 2.输出学校信息 *\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;=======================\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot;\n请选择相应的代码:&amp;quot;);&lt;br /&gt;&#xD;
for(;;)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
scanf(&amp;quot;%d&amp;quot;,&amp;amp;se);&lt;br /&gt;&#xD;
getchar();&lt;br /&gt;&#xD;
if(se&amp;gt;2||se&amp;lt;0)&lt;br /&gt;&#xD;
printf(&amp;quot;\n错误!请重新选择:&amp;quot;);&lt;br /&gt;&#xD;
else break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
return se;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void print_item()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p;&lt;br /&gt;&#xD;
int m,i;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
if(p==NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;链表为空,转入初始化...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
init();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n项目%d结果为:&amp;quot;,p-&amp;gt;item);&lt;br /&gt;&#xD;
switch(p-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break;&lt;br /&gt;&#xD;
case 1:m=5;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
printf(&amp;quot;\n学校编号\t选手姓名 选手分数\n&amp;quot;);&lt;br /&gt;&#xD;
for(i=0;i&amp;lt;m;i++)&lt;br /&gt;&#xD;
printf(&amp;quot; %d\t\t %s\t\t%d\n&amp;quot;,p-&amp;gt;num[i],p-&amp;gt;athlete[i].name,p-&amp;gt;athlete[i].score);&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void print_school()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
SCH *p;&lt;br /&gt;&#xD;
int m,i,j,find=0;&lt;br /&gt;&#xD;
int menscore,womenscore,totalscore;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
if(p==NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;链表为空,转入初始化...\n&amp;quot;);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
init();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
for(i=2001;i&amp;lt;=2001+MaxSize;i++)&lt;br /&gt;&#xD;
{ &lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
totalscore=menscore=womenscore=0;&lt;br /&gt;&#xD;
while(p!=NULL)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
switch(p-&amp;gt;item%2)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
case 0:m=3;break;&lt;br /&gt;&#xD;
case 1:m=5;break;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
for(j=0;j&amp;lt;m;j++)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(i==p-&amp;gt;num[j])&lt;br /&gt;&#xD;
find=1;&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
if(find==1)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(p-&amp;gt;item&amp;lt;MaxSize+1001)&lt;br /&gt;&#xD;
menscore+=p-&amp;gt;athlete[j].score;&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
womenscore+=p-&amp;gt;athlete[j].score;&lt;br /&gt;&#xD;
totalscore=menscore+womenscore;&lt;br /&gt;&#xD;
find=0;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
printf(&amp;quot;\n编号为%d的学校成绩为:&amp;quot;,i);&lt;br /&gt;&#xD;
printf(&amp;quot;\n学校编号 男子总分 女子总分 团体总分\n&amp;quot;);&lt;br /&gt;&#xD;
printf(&amp;quot; %d\t\t%d\t%d\t%d\n&amp;quot;,i,menscore,womenscore,totalscore);&lt;br /&gt;&#xD;
getch();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Save() /*保存*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
SCH *p,*p0;&lt;br /&gt;&#xD;
p=head;&lt;br /&gt;&#xD;
if((fp=fopen(&amp;quot;project.dat&amp;quot;,&amp;quot;wb&amp;quot;))==NULL) /*新建文件*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
printf(&amp;quot;\n文件保存失败!\n请重新启动本系统...\n&amp;quot;);&lt;br /&gt;&#xD;
exit(0);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
while(p!=NULL) /*写入文件*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
if(fwrite(p,sizeof(SCH),1,fp)!=1)&lt;br /&gt;&#xD;
printf(&amp;quot;\n写入文件失败!\n请重新启动本系统!\n&amp;quot;);&lt;br /&gt;&#xD;
p0=p;&lt;br /&gt;&#xD;
p=p-&amp;gt;next;&lt;br /&gt;&#xD;
free(p0); /*释放所有结点*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
head=NULL;&lt;br /&gt;&#xD;
fclose(fp); /*关闭文件(下同)*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void Load() /*载入保存内容*/&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
SCH *p1,*p2,*p3;&lt;br /&gt;&#xD;
fp=fopen(&amp;quot;project.dat&amp;quot;,&amp;quot;rb&amp;quot;); /*打开*/&lt;br /&gt;&#xD;
p1=(SCH *)malloc(sizeof(SCH)); /*创建新链表的头结点*/&lt;br /&gt;&#xD;
fread(p1,sizeof(SCH),1,fp); /*读出内容*/&lt;br /&gt;&#xD;
head=p2=p3=p1;&lt;br /&gt;&#xD;
while(!feof(fp))&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
p1=(SCH *)malloc(sizeof(SCH));&lt;br /&gt;&#xD;
fread(p1,sizeof(SCH),1,fp);&lt;br /&gt;&#xD;
p2-&amp;gt;next=p1;&lt;br /&gt;&#xD;
p3=p2;&lt;br /&gt;&#xD;
p2=p1;&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
p3-&amp;gt;next=NULL;&lt;br /&gt;&#xD;
free(p1); /*释放多余的空间*/&lt;br /&gt;&#xD;
fclose(fp); &lt;br /&gt;&#xD;
if(feof(fp))&lt;br /&gt;&#xD;
printf(&amp;quot;载入已保存文件0_0失败0_0...\n&amp;quot;);&lt;br /&gt;&#xD;
else&lt;br /&gt;&#xD;
printf(&amp;quot;\n载入已保存文件^_^成功^_^...\n&amp;quot;);&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
void main()&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
FILE *fp;&lt;br /&gt;&#xD;
system(&amp;quot;cls&amp;quot;);&lt;br /&gt;&#xD;
about();&lt;br /&gt;&#xD;
if((fp=fopen(&amp;quot;project.dat&amp;quot;,&amp;quot;rb&amp;quot;))==NULL) /*如果文件为空,则进行初始化*/&lt;br /&gt;&#xD;
init();&lt;br /&gt;&#xD;
else Load(); /*否则加载已保存内容*/ &lt;br /&gt;&#xD;
menuselect();&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;span style="color: #0000ff"&gt;&lt;span style="font-size: small"&gt;&lt;span style="font-family: 隶书"&gt;如有需要原程序学习的朋友,可以留下你的邮箱,我会在第一时间将程序发到你邮箱（包括可执行文件）&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
使用时必须注明版权所有,本程序最终版权归作者杜凯所有&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
由于此空间不支持下载，所以不能提供下载功能,由此带来的不便,请谅解&lt;br /&gt;&#xD;
&lt;br /&gt;&#xD;
mail:http://hi.baidu.com/wubin7019088&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <category>我的文章</category>
      <pubDate>Wed, 24 Aug 2011 08:36:38 GMT</pubDate>
      <guid>ArticleDetail.action?id=11</guid>
      <dc:creator>dukai</dc:creator>
      <dc:date>2011-08-24T08:36:38Z</dc:date>
    </item>
  </channel>
</rss>

